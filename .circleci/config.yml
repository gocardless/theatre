---
version: 2

references:
  docker_golang: &docker_golang
    docker:
      - image: golang:1.14.2
    working_directory: /go/src/github.com/gocardless/theatre

jobs:
  check-code-formatting:
    <<: *docker_golang
    steps:
      - checkout
      - run:
          name: Ensure code is formatted
          command: make fmt && git diff --exit-code

  check-generated-resources:
    <<: *docker_golang
    steps:
      - checkout
      - run:
          name: Ensure CRD generated code is up to date
          command: make generate && git diff --exit-code apis/
      - run:
          name: Ensure CRD generated manifests are up to date
          command: make manifests && git diff --exit-code config/

  unit-integration:
    <<: *docker_golang
    steps:
      - checkout
      - run:
          name: Install ginkgo test runner
          command: go get github.com/onsi/ginkgo/ginkgo
      - run:
          name: Install Kubebuilder test helpers
          command: |
            mkdir /usr/local/kubebuilder
            curl -fsL https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_linux_amd64.tar.gz \
              | tar -xvz --strip=1 -C /usr/local/kubebuilder
      - run:
          name: Run tests
          command: ginkgo -r -v

  release:
    <<: *docker_golang
    steps:
      - add_ssh_keys:
          fingerprints:
            - 60:aa:94:d0:56:d8:c9:37:08:c2:41:a8:9d:06:d2:61
      - checkout
      - run:
          name: Release
          command: |
            CURRENT_VERSION="v$(cat VERSION)"

            if [[ $(git tag -l "${CURRENT_VERSION}") == "${CURRENT_VERSION}" ]]; then
              echo "Version ${CURRENT_VERSION} is already released"
              exit 0
            fi

            curl -L -o /tmp/goreleaser_Linux_x86_64.tar.gz https://github.com/goreleaser/goreleaser/releases/download/v0.133.0/goreleaser_Linux_x86_64.tar.gz
            tar zxf /tmp/goreleaser_Linux_x86_64.tar.gz -C /tmp

            git log --pretty=oneline --abbrev-commit --no-decorate --no-color "$(git describe --tags --abbrev=0)..HEAD" -- pkg cmd vendor internal > /tmp/release-notes
            git tag "${CURRENT_VERSION}"
            git push --tags

            /tmp/goreleaser --rm-dist --release-notes /tmp/release-notes

workflows:
  version: 2
  build-integration:
    jobs:
      - check-code-formatting
      - check-generated-resources
      - unit-integration
