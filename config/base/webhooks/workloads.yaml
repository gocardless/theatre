---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: workloads
  annotations:
    cert-manager.io/inject-ca-from: theatre-system/theatre-workloads-manager
webhooks:
  - admissionReviewVersions: ["v1beta1"] # need to upgrade out webhook to support v1
    clientConfig:
      caBundle: Cg==
      service:
        name: theatre-workloads-manager
        namespace: theatre-system
        path: /mutate-consoles
        port: 443
    name: console-authenticator.workloads.crd.gocardless.com
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - workloads.crd.gocardless.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - consoles
        scope: '*'
    sideEffects: None
  - admissionReviewVersions: ["v1beta1"]
    clientConfig:
      caBundle: Cg==
      service:
        name: theatre-workloads-manager
        namespace: theatre-system
        path: /mutate-pods
        port: 443
    name: priority-injector.workloads.crd.gocardless.com
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
          # Only run the webhook when the namespace has the necessary label. It
          # prevents running the mutating webhook for critical namespaces like
          # kube-system and theatre-system so the system can recover
          # automatically if the workload controller goes down.
        - key: theatre-priority-injector
          operator: Exists
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
        scope: '*'
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: workloads
  annotations:
    cert-manager.io/inject-ca-from: theatre-system/theatre-workloads-manager
webhooks:
  - admissionReviewVersions: ["v1beta1"] # need to upgrade out webhook to support v1
    clientConfig:
      caBundle: Cg==
      service:
        name: theatre-workloads-manager
        namespace: theatre-system
        path: /validate-consoleauthorisations
        port: 443
    name: console-authorisation.workloads.crd.gocardless.com
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - workloads.crd.gocardless.com
        apiVersions:
          - v1alpha1
        operations:
          - UPDATE
        resources:
          - consoleauthorisations
        scope: '*'
    sideEffects: None
  - admissionReviewVersions: ["v1beta1"] # need to upgrade out webhook to support v1
    clientConfig:
      caBundle: Cg==
      service:
        name: theatre-workloads-manager
        namespace: theatre-system
        path: /validate-consoletemplates
        port: 443
    name: console-template-validation.workloads.crd.gocardless.com
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - workloads.crd.gocardless.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - consoletemplates
        scope: '*'
    sideEffects: None
  - admissionReviewVersions: ["v1beta1"] # need to upgrade out webhook to support v1
    clientConfig:
      caBundle: Cg==
      service:
        name: theatre-workloads-manager
        namespace: theatre-system
        path: /observe-console-attach
        port: 443
    name: console-attach-observer.workloads.crd.gocardless.com
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CONNECT
        resources:
          - pods/attach
        scope: '*'
    sideEffects: NoneOnDryRun
    failurePolicy: Ignore # Ignore failures as we want to record attachment, but not at the cost of blocking connections
